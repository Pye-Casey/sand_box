Conditional Expressions

While an IF statement chooses between two statements, a conditional expression chooses between two expressions. For example, consider the following code inserting a person’s title before their last name according to their gender:
    cout << "Hello "
    << (isMale ? "Mr. " : "Mrs. ")
    << lastName;
Even though we have a single cout statement, we can embed the conditional expression right in the middle of the statement.

There is exactly one ternary operator (operator with three operands) in the C++ language: the conditional expression:
    <Boolean expression> ? <true expression> : <false expression>
Like all operators, the result is an expression. In other words, the evaluation of the conditional expression is either the true-expression or the false-expression.

Example:
    number = (number < 0) ? –number : number;

My example:
{
       int number = -1;
    // use conditional expression
    (number > 0) ? cout << "The number is positive\n" : cout <<"The number is negative\n"; 
    
    cout << endl;
     cout << "Number value:" << number << endl;
    int newNum = (number > 0) ?  number*10 : number=0;
   
  
    cout << "New Num conditional value: " << newNum << endl;
}

